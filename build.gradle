import dependencies.BuildPlugins
import dependencies.Dependencies

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.72'
    ext.jacoco_version = '0.8.4'
    ext.detekt_version = '1.0.0.RC8'
    ext.navigation_version = '1.0.0-rc02'

    repositories {
        google()
        jcenter()
        maven { url 'https://repo1.maven.org/maven2/' }
        
    }

    dependencies {
        classpath BuildPlugins.CRASHLYTICS
        classpath BuildPlugins.GRADLE
        classpath BuildPlugins.GOOGLE_SERVICES
        classpath BuildPlugins.KOTLIN
        classpath BuildPlugins.KOTLIN_ALLOPEN
        classpath BuildPlugins.DETEKT
        classpath BuildPlugins.NAVIGATION
        classpath BuildPlugins.JACOCO
        classpath BuildPlugins.FIREBASE_APP_DISTRIBUTION
        classpath BuildPlugins.SONAR
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url RepositoriesUri.SONATYPE }
        maven { url RepositoriesUri.JITPACK }
        maven { url RepositoriesUri.ZENDESK }
        maven { url RepositoriesUri.SAFE_ROOM }
        mavenLocal()
    }
}


subprojects {

    apply from: "$rootDir/tools/linters.gradle"

    afterEvaluate {
        if (!project.hasProperty("android")) return

        android {
            compileSdkVersion AndroidConfig.COMPILE_SDK

            defaultConfig {
                minSdkVersion AndroidConfig.MIN_SDK
                targetSdkVersion AndroidConfig.TARGET_SDK
                versionCode VERSION_CODE.toInteger()
                versionName MAJOR_VERSION + '.' + MINOR_VERSION + '.' + PATCH_VERSION
                testInstrumentationRunner AndroidConfig.INSTRUMENTATION_TEST_RUNNER
                vectorDrawables.useSupportLibrary = true

                if (!IDENTIFIER.isEmpty()) {
                    versionNameSuffix = '-' + IDENTIFIER
                }
            }

            compileOptions {
                sourceCompatibility AndroidConfig.JAVA_VERSION
                targetCompatibility AndroidConfig.JAVA_VERSION
            }

            kotlinOptions {
                jvmTarget = AndroidConfig.JAVA_VERSION
            }

            androidExtensions {
                experimental = true
            }

            sourceSets {
                main.java.srcDirs += Source.MAIN

                test.java.srcDirs += [Source.TEST, Source.SHARED_TEST]
                test.resources.srcDirs += [Source.SHARED_TEST_RESOURCES]

                androidTest {
                    java.srcDirs += [Source.ANDROID_TEST, Source.SHARED_TEST]
                    assets.srcDirs += [Source.SHARED_TEST_RESOURCES]
                }
            }

            packagingOptions {
                exclude 'META-INF/styleguide_*.kotlin_module'
            }

            configurations.all {
                resolutionStrategy.force Dependencies.Android.TRANSITION
            }
        }

        dependencies {

            implementation Dependencies.KOTLIN
            implementation Dependencies.Kodein.GENERIC
            implementation Dependencies.Kodein.CONF
            implementation Dependencies.Kodein.ANDROID
            implementation Dependencies.Android.CORE_COMMON
            implementation Dependencies.Android.CORE_RUNTIME
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
